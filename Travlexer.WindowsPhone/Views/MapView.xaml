<phone:PhoneApplicationPage x:Class="Travlexer.WindowsPhone.Views.MapView"
							xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
							xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
							xmlns:Behaviors="clr-namespace:Codify.Behaviors;assembly=Codify"
							xmlns:CodifyMaps="clr-namespace:Codify.Controls.Maps;assembly=Codify.Controls.Maps"
							xmlns:Collections="clr-namespace:Codify.Collections;assembly=Codify"
							xmlns:Controls="clr-namespace:Travlexer.WindowsPhone.Controls"
							xmlns:Core="clr-namespace:Microsoft.Phone.Controls.Maps.Core;assembly=Microsoft.Phone.Controls.Maps"
							xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
							xmlns:DependencyShell="clr-namespace:Codify.DependencyShell;assembly=Codify"
							xmlns:ec="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions"
							xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
							xmlns:Maps="clr-namespace:Microsoft.Phone.Controls.Maps;assembly=Microsoft.Phone.Controls.Maps"
							xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
							xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
							xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
							xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
							xmlns:Triggers="clr-namespace:Codify.Triggers;assembly=Codify"
							xmlns:ViewModels="clr-namespace:Travlexer.WindowsPhone.ViewModels"
							xmlns:WindowsPhone="clr-namespace:Codify;assembly=Codify"
							Style="{StaticResource PageDefault}"
							FontFamily="{StaticResource PhoneFontFamilyNormal}"
							FontSize="{StaticResource PhoneFontSizeNormal}"
							Foreground="{StaticResource PhoneForegroundBrush}"
							Orientation="Portrait"
							mc:Ignorable="d"
							d:DesignWidth="480"
							d:DesignHeight="768"
							shell:SystemTray.IsVisible="True"
							shell:SystemTray.Opacity="{StaticResource ShellOpacity}"
							d:DataContext="{Binding MapViewModel, Source={StaticResource DesignTime}}">
	<phone:PhoneApplicationPage.Resources>
		<ScaleTransform x:Key="TileScale" />
		<!--This style is used in code behind, do not remove-->
		<Style x:Key="TilePushpin"
			   TargetType="Maps:Pushpin">
			<Setter Property="UseLayoutRounding"
					Value="False" />
			<Setter Property="Width"
					Value="256" />
			<Setter Property="Height"
					Value="256" />
			<Setter Property="IsHitTestVisible"
					Value="False" />
			<Setter Property="RenderTransform"
					Value="{StaticResource TileScale}" />
			<Setter Property="CacheMode"
					Value="BitmapCache" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Maps:Pushpin">
						<Rectangle Fill="{TemplateBinding Background}"
								   Width="256"
								   Height="256"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Color x:Key="ColorGridLineSolid">#FFAAAAAA</Color>
		<Color x:Key="ColorGridLineTransparent">#00AAAAAA</Color>
	</phone:PhoneApplicationPage.Resources>
	<i:Interaction.Triggers>
		<i:EventTrigger EventName="BackKeyPress">
			<i:InvokeCommandAction Command="{Binding CommandGoToDefaultState, Mode=OneTime}" />
		</i:EventTrigger>
	</i:Interaction.Triggers>
	<shell:SystemTray.ProgressIndicator>
		<shell:ProgressIndicator IsIndeterminate="{Binding IsBusy.Value}"
								 IsVisible="True" />
	</shell:SystemTray.ProgressIndicator>
	<phone:PhoneApplicationPage.DataContext>
		<ViewModels:MapViewModel />
	</phone:PhoneApplicationPage.DataContext>
	<Grid Background="#FFDDDDDD">
		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup x:Name="VisualStates">
				<VisualStateGroup.Transitions>
					<VisualTransition GeneratedDuration="0:0:0.3"
									  To="PushpinSelected">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedPushpinContent"
														   Storyboard.TargetProperty="(PushpinOverlay.VisualState)">
								<DiscreteObjectKeyFrame KeyTime="0:0:0.1">
									<DiscreteObjectKeyFrame.Value>
										<WindowsPhone:ExpansionStates>Expanded</WindowsPhone:ExpansionStates>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
							<DoubleAnimation Storyboard.TargetName="SelectedPushpinBackground"
											 Storyboard.TargetProperty="(UIElement.Opacity)"
											 Duration="0:0:0.3"
											 EasingFunction="{StaticResource EasingQuinticOut}"
											 To="1" />
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedPushpinLayer"
														   Storyboard.TargetProperty="(UIElement.Visibility)">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Toolbar"
														   Storyboard.TargetProperty="(UIElement.Visibility)">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Collapsed</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualTransition>
					<VisualTransition From="PushpinSelected"
									  GeneratedDuration="0:0:0.2">
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="SelectedPushpinBackground"
											 Storyboard.TargetProperty="(UIElement.Opacity)"
											 Duration="0:0:0.3"
											 EasingFunction="{StaticResource EasingQuinticOut}" />
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedPushpinLayer"
														   Storyboard.TargetProperty="(UIElement.Visibility)">
								<DiscreteObjectKeyFrame KeyTime="0:0:0.3">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Collapsed</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Toolbar"
														   Storyboard.TargetProperty="(UIElement.Visibility)">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualTransition>
					<VisualTransition To="Search">
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="SearchBackground"
											 Storyboard.TargetProperty="(UIElement.Opacity)"
											 Duration="0:0:0.3"
											 To="1" />
							<DoubleAnimation Storyboard.TargetName="SearchContentPanel"
											 Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)"
											 Duration="0:0:0.3"
											 EasingFunction="{StaticResource EasingQuinticOut}"
											 To="32" />
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SearchPanel"
														   Storyboard.TargetProperty="(UIElement.Visibility)">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualTransition>
					<VisualTransition From="Search">
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="SearchBackground"
											 Storyboard.TargetProperty="(UIElement.Opacity)"
											 Duration="0:0:0.3" />
							<DoubleAnimation Storyboard.TargetName="SearchContentPanel"
											 Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)"
											 Duration="0:0:0.3"
											 EasingFunction="{StaticResource EasingQuinticOut}" />
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SearchPanel"
														   Storyboard.TargetProperty="(UIElement.Visibility)">
								<DiscreteObjectKeyFrame KeyTime="0:0:0.3">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Collapsed</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualTransition>
					<VisualTransition GeneratedDuration="0"
									  To="Drag">
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="DragPushpin"
											 Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)"
											 Duration="0:0:0.3"
											 EasingFunction="{StaticResource EasingQuinticOut}"
											 To="-90" />
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DragPushpin"
														   Storyboard.TargetProperty="(UIElement.Visibility)">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Toolbar"
														   Storyboard.TargetProperty="(UIElement.Visibility)">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Collapsed</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualTransition>
					<VisualTransition GeneratedDuration="0" To="Route">
						<Storyboard>
							<DoubleAnimation Duration="0:0:0.3" To="32" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="RouteContentPanel" EasingFunction="{StaticResource EasingQuinticOut}"/>
							<DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="RouteBackground"/>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="RoutePanel">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualTransition>
					<VisualTransition From="Route" GeneratedDuration="0">
						<Storyboard>
							<DoubleAnimation Duration="0:0:0.3" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="RouteContentPanel" To="-213" EasingFunction="{StaticResource EasingQuinticOut}"/>
							<DoubleAnimation Duration="0:0:0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="RouteBackground"/>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="RoutePanel">
								<DiscreteObjectKeyFrame KeyTime="0:0:0.3">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Collapsed</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualTransition>
				</VisualStateGroup.Transitions>
				<VisualState x:Name="Default" />
				<VisualState x:Name="Search">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SearchPanel"
							Storyboard.TargetProperty="(UIElement.Visibility)">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<DoubleAnimation Storyboard.TargetName="SearchBackground"
							Storyboard.TargetProperty="(UIElement.Opacity)"
							Duration="0"
							To="1"
							d:IsOptimized="True" />
						<DoubleAnimation Storyboard.TargetName="SearchContentPanel"
							Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)"
							Duration="0"
							EasingFunction="{StaticResource EasingQuinticOut}"
							To="32"
							d:IsOptimized="True" />
					</Storyboard>
				</VisualState>
				<VisualState x:Name="PushpinSelected">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedPushpinContent"
													   Storyboard.TargetProperty="(PushpinOverlay.VisualState)">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<WindowsPhone:ExpansionStates>Expanded</WindowsPhone:ExpansionStates>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<DoubleAnimation Storyboard.TargetName="SelectedPushpinBackground"
										 Storyboard.TargetProperty="(UIElement.Opacity)"
										 Duration="0"
										 To="1"
										 d:IsOptimized="True" />
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedPushpinLayer"
													   Storyboard.TargetProperty="(UIElement.Visibility)">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Toolbar"
													   Storyboard.TargetProperty="(UIElement.Visibility)">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="Drag">
					<Storyboard>
						<DoubleAnimation Storyboard.TargetName="DragPushpin"
							Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)"
							Duration="0"
							To="-90"
							d:IsOptimized="True" />
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="DragPushpin"
							Storyboard.TargetProperty="(UIElement.Visibility)">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Toolbar"
							Storyboard.TargetProperty="(UIElement.Visibility)">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Collapsed</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="Route">
					<Storyboard>
						<DoubleAnimation Duration="0" To="32" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="RouteContentPanel" d:IsOptimized="True"/>
						<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="RouteBackground" d:IsOptimized="True"/>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="RoutePanel">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="ToolbarStates">
				<VisualStateGroup.Transitions>
					<VisualTransition GeneratedDuration="0"
									  To="Expanded">
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="Toolbar"
											 Storyboard.TargetProperty="(FrameworkElement.Height)"
											 Duration="0:0:0.3"
											 EasingFunction="{StaticResource EasingQuinticOut}"
											 To="570" />
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandedPanel"
														   Storyboard.TargetProperty="(UIElement.Visibility)">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
							<DoubleAnimation Storyboard.TargetName="ExpandButton"
											 Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationX)"
											 Duration="0:0:0.3"
											 To="180" />
						</Storyboard>
					</VisualTransition>
					<VisualTransition From="Expanded"
									  GeneratedDuration="0"
									  To="Collapsed">
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="Toolbar"
											 Storyboard.TargetProperty="(FrameworkElement.Height)"
											 Duration="0:0:0.3"
											 EasingFunction="{StaticResource EasingQuinticOut}" />
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandedPanel"
														   Storyboard.TargetProperty="(UIElement.Visibility)">
								<DiscreteObjectKeyFrame KeyTime="0:0:0.3">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Collapsed</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
							<DoubleAnimation Storyboard.TargetName="ExpandButton"
											 Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationX)"
											 Duration="0:0:0.3" />
						</Storyboard>
					</VisualTransition>
				</VisualStateGroup.Transitions>
				<VisualState x:Name="Collapsed" />
				<VisualState x:Name="Expanded">
					<Storyboard>
						<DoubleAnimation Storyboard.TargetName="Toolbar"
										 Storyboard.TargetProperty="(FrameworkElement.Height)"
										 Duration="0"
										 To="570"
										 d:IsOptimized="True" />
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandedPanel"
													   Storyboard.TargetProperty="(UIElement.Visibility)">
							<DiscreteObjectKeyFrame KeyTime="0">
								<DiscreteObjectKeyFrame.Value>
									<Visibility>Visible</Visibility>
								</DiscreteObjectKeyFrame.Value>
							</DiscreteObjectKeyFrame>
						</ObjectAnimationUsingKeyFrames>
						<DoubleAnimation Storyboard.TargetName="ExpandButton"
										 Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationX)"
										 Duration="0"
										 To="180"
										 d:IsOptimized="True" />
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>
		<Rectangle>
			<Rectangle.Fill>
				<LinearGradientBrush SpreadMethod="Repeat" MappingMode="Absolute" EndPoint="0,30">
					<LinearGradientBrush.GradientStops>
						<GradientStopCollection>
							<GradientStop Offset="0.49" Color="{StaticResource ColorGridLineTransparent}"/>
							<GradientStop Offset="0.49" Color="{StaticResource ColorGridLineSolid}"/>
							<GradientStop Offset="0.50" Color="{StaticResource ColorGridLineSolid}"/>
							<GradientStop Offset="0.50" Color="{StaticResource ColorGridLineTransparent}"/>
						</GradientStopCollection>
					</LinearGradientBrush.GradientStops>
			   </LinearGradientBrush>
			</Rectangle.Fill>
		</Rectangle>
		<Rectangle>
			<Rectangle.Fill>
				<LinearGradientBrush MappingMode="Absolute" SpreadMethod="Repeat" EndPoint="30,0">
					<LinearGradientBrush.GradientStops>
						<GradientStopCollection>
							<GradientStop Offset="0.49" Color="{StaticResource ColorGridLineTransparent}"/>
							<GradientStop Offset="0.49" Color="{StaticResource ColorGridLineSolid}"/>
							<GradientStop Offset="0.50" Color="{StaticResource ColorGridLineSolid}"/>
							<GradientStop Offset="0.50" Color="{StaticResource ColorGridLineTransparent}"/>
						</GradientStopCollection>
					</LinearGradientBrush.GradientStops>
   </LinearGradientBrush>
			</Rectangle.Fill>
		</Rectangle>
		<Maps:Map x:Name="Map"
				  Center="{Binding Center.Value, Mode=TwoWay}"
				  CopyrightVisibility="Collapsed"
				  CredentialsProvider="AiEEQMxcy4psQQEr7jujXL34vU9268zhPAWJRgDcHNpKdKwyP0TxZRiLOX6j2CMW"
				  LogoVisibility="Collapsed"
				  ZoomLevel="{Binding ZoomLevel.Value, Mode=TwoWay}">
			<i:Interaction.Triggers>
				<i:EventTrigger EventName="MapPan">
					<i:InvokeCommandAction Command="{Binding CommandStopTrackingCurrentLocation, Mode=OneTime}" />
				</i:EventTrigger>
				<i:EventTrigger EventName="DoubleTap">
					<i:InvokeCommandAction Command="{Binding CommandStopTrackingCurrentLocation, Mode=OneTime}" />
				</i:EventTrigger>
				<i:EventTrigger EventName="Loaded">
					<i:InvokeCommandAction Command="{Binding CommandStartGeoWatcher, Mode=OneTime}" />
				</i:EventTrigger>
				<i:EventTrigger EventName="Unloaded">
					<i:InvokeCommandAction Command="{Binding CommandStopGeoWatcher, Mode=OneTime}" />
				</i:EventTrigger>
			</i:Interaction.Triggers>
			<toolkit:GestureService.GestureListener>
				<toolkit:GestureListener PinchStarted="OnMapPinchStarted" />
			</toolkit:GestureService.GestureListener>
			<Maps:Map.Mode>
				<Core:MercatorMode />
			</Maps:Map.Mode>
			<Maps:MapLayer Visibility="{Binding IsOnline.Value, Converter={StaticResource VisibilityConverter}}">
				<Maps:MapTileLayer Visibility="{Binding IsStreetLayerVisible}">
					<Maps:MapTileLayer.TileSources>
						<CodifyMaps:GoogleMapsTileSource Layer="Street" />
					</Maps:MapTileLayer.TileSources>
				</Maps:MapTileLayer>
				<Maps:MapTileLayer Visibility="{Binding IsSatelliteHybridLayerVisible}">
					<Maps:MapTileLayer.TileSources>
						<CodifyMaps:GoogleMapsTileSource Layer="SatelliteHybrid" />
					</Maps:MapTileLayer.TileSources>
				</Maps:MapTileLayer>
				<Maps:MapTileLayer Visibility="{Binding IsTrafficLayerVisible}">
					<Maps:MapTileLayer.TileSources>
						<CodifyMaps:GoogleMapsTileSource Layer="TrafficOverlay" />
					</Maps:MapTileLayer.TileSources>
				</Maps:MapTileLayer>
				<Maps:MapTileLayer Visibility="{Binding IsTransitLayerVisible}">
					<Maps:MapTileLayer.TileSources>
						<CodifyMaps:GoogleMapsTileSource Layer="TransitOverlay" />
					</Maps:MapTileLayer.TileSources>
				</Maps:MapTileLayer>
			</Maps:MapLayer>
			<Maps:MapLayer Visibility="{Binding IsOnline.Value, ConverterParameter=reverse, Converter={StaticResource VisibilityConverter}}" Margin="2,0,-2,0">
				<Maps:MapLayer x:Name="OfflineBaseLayer" />
				<Maps:MapLayer x:Name="OfflineTransitLayer" Visibility="{Binding IsTransitLayerVisible, Mode=OneWay}" />
			</Maps:MapLayer>
			<Maps:Pushpin IsHitTestVisible="{Binding DragPushpin, ConverterParameter=reverse, Converter={StaticResource BooleanConverter}}"
						  Location="{Binding CurrentLocation}"
						  PositionOrigin="Center"
						  Template="{x:Null}"
						  Visibility="{Binding CurrentLocation, TargetNullValue=Collapsed}">
				<i:Interaction.Triggers>
					<Triggers:EventTrigger EventName="Tap"
						IsHandled="True">
						<i:InvokeCommandAction Command="{Binding CommandAddCurrentPlace, Mode=OneTime}" />
					</Triggers:EventTrigger>
				</i:Interaction.Triggers>
				<Grid>
					<Ellipse Height="40"
							 Width="40"
							 Fill="Transparent" />
					<Rectangle Height="30"
							   Width="30"
							   HorizontalAlignment="Center"
							   VerticalAlignment="Center"
							   Fill="{StaticResource BrushIconCurrentLocationBlack}" />
				</Grid>
			</Maps:Pushpin>
			<Maps:MapItemsControl Collections:DelayCollection.ItemsSource="{Binding Pushpins}"
								  Collections:DelayCollection.Delay="0:0:0.100">
				<i:Interaction.Behaviors>
					<Behaviors:CancelGestureEventBehavior />
				</i:Interaction.Behaviors>
				<Maps:MapItemsControl.ItemTemplate>
					<DataTemplate>
						<Maps:Pushpin x:Name="Pushpin"
									  Background="{Binding Data.Color, Converter={StaticResource PlaceColorToHexConverter}}"
									  Location="{Binding Data.Location, Converter={StaticResource LocationGeoCoordinateConverter}}"
									  PositionOrigin="BottomCenter"
									  Tag="{Binding Data.IsSearchResult}"
									  Visibility="{Binding Parent.DragPushpin, ConverterParameter=reverse, Converter={StaticResource VisibilityConverter}}">
							<toolkit:GestureService.GestureListener>
								<toolkit:GestureListener DragCompleted="OnPushpinDragCompleted"
														 DragDelta="OnPushpinDragDelta"
														 DragStarted="OnPushpinDragStarted"
														 Hold="OnPushpinHold" />
							</toolkit:GestureService.GestureListener>
							<i:Interaction.Triggers>
								<i:EventTrigger EventName="Tap">
									<i:InvokeCommandAction Command="{Binding Parent.CommandSelectPushpin, Mode=OneTime}"
										CommandParameter="{Binding}" />
									<i:InvokeCommandAction Command="{Binding Parent.CommandStopTrackingCurrentLocation, Mode=OneTime}" />
								</i:EventTrigger>
								<i:EventTrigger>
									<ec:GoToStateAction StateName="Drop"
										TargetObject="{Binding ElementName=Pushpin}" />
								</i:EventTrigger>
							</i:Interaction.Triggers>
							<ContentPresenter Height="32"
											  Width="32"
											  Content="{Binding Data.Icon, Converter={StaticResource PlaceIconToControlConverter}}" />
						</Maps:Pushpin>
					</DataTemplate>
				</Maps:MapItemsControl.ItemTemplate>
			</Maps:MapItemsControl>
			<Maps:MapLayer x:Name="SelectedPushpinLayer"
						   Visibility="Collapsed">
				<i:Interaction.Behaviors>
					<Behaviors:CancelGestureEventBehavior />
				</i:Interaction.Behaviors>
				<Rectangle x:Name="SelectedPushpinBackground"
						   Fill="{StaticResource BrushSemiTransparentBackground}"
						   IsHitTestVisible="False"
						   Opacity="0" />
				<Maps:Pushpin x:Name="SelectedPushpin"
							  Background="{Binding Data.Color, Converter={StaticResource PlaceColorToHexConverter}}"
							  DataContext="{Binding SelectedPushpin}"
							  Location="{Binding Data.Location, Converter={StaticResource LocationGeoCoordinateConverter}}"
							  PositionOrigin="BottomCenter"
							  RenderTransformOrigin="0.5,0.5"
							  Tag="{Binding Data.IsSearchResult}"
							  Visibility="{Binding TargetNullValue=Collapsed}">
					<Maps:Pushpin.RenderTransform>
						<CompositeTransform />
					</Maps:Pushpin.RenderTransform>
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="Tap">
							<i:InvokeCommandAction Command="{Binding Parent.CommandDeselectPushpin, Mode=OneTime}"
								CommandParameter="{Binding}" />
						</i:EventTrigger>
						<Triggers:RootTouchTrigger CanTrigger="{Binding Visibility, Converter={StaticResource BooleanConverter}, ElementName=SelectedPushpin}">
							<i:InvokeCommandAction Command="{Binding Parent.CommandDeselectPushpin, Mode=OneTime}"
								CommandParameter="{Binding}" />
						</Triggers:RootTouchTrigger>
						<i:EventTrigger>
							<ec:GoToStateAction StateName="Drop"
								TargetName="SelectedPushpin"
								UseTransitions="False" />
						</i:EventTrigger>
					</i:Interaction.Triggers>
					<Controls:PushpinContent x:Name="SelectedPushpinContent"
											 Address="{Binding Data.FormattedAddress}"
											 CommandDelete="{Binding Parent.CommandDeletePlace, Mode=OneTime}"
											 CommandDeleteParameter="{Binding}"
											 CommandPinSearchResult="{Binding Parent.CommandPinSearchResult, Mode=OneTime}"
											 CommandPinSearchResultParameter="{Binding}"
											 CommandRefresh="{Binding Parent.CommandUpdatePlace, Mode=OneTime}"
											 CommandRefreshParameter="{Binding}"
											 Icon="{Binding Data.Icon}"
											 IsSearchResult="{Binding Data.IsSearchResult, Mode=TwoWay}"
											 Title="{Binding Data.Name}"
											 VisualState="Collapsed"
											 WorkingState="{Binding Data.DataState}" />
				</Maps:Pushpin>
			</Maps:MapLayer>
			<Maps:Pushpin x:Name="DragPushpin"
						  Background="{Binding Color, Converter={StaticResource PlaceColorToHexConverter}}"
						  DataContext="{Binding DragPushpin.Data}"
						  IsHitTestVisible="False"
						  Location="{Binding Location, Converter={StaticResource LocationGeoCoordinateConverter}}"
						  PositionOrigin="BottomCenter"
						  Visibility="Collapsed">
				<i:Interaction.Triggers>
					<i:EventTrigger>
						<ec:GoToStateAction StateName="Drop"
							TargetObject="{Binding ElementName=DragPushpin}"
							UseTransitions="False" />
					</i:EventTrigger>
				</i:Interaction.Triggers>
				<Maps:Pushpin.RenderTransform>
					<CompositeTransform />
				</Maps:Pushpin.RenderTransform>
				<ContentPresenter Height="32"
								  Width="32"
								  Content="{Binding Icon, Converter={StaticResource PlaceIconToControlConverter}}" />
			</Maps:Pushpin>
		</Maps:Map>
		<Border x:Name="Toolbar"
				Height="108"
				Margin="10,0,0,0"
				Padding="10"
				Width="68"
				Background="{StaticResource PhoneChromeBrush}"
				CornerRadius="34"
				HorizontalAlignment="Left"
				Opacity="{StaticResource ShellOpacity}"
				VerticalAlignment="Center">
			<i:Interaction.Behaviors>
				<Behaviors:CancelGestureEventBehavior/>
			</i:Interaction.Behaviors>
			<StackPanel>
				<Controls:CircleButton Click="OnCaptureScreen">
					<Rectangle Fill="{StaticResource BrushIconCamera}" />
				</Controls:CircleButton>
				<Button Style="{StaticResource EmptyButton}"
						x:Name="ExpandButton"
						Height="40"
						HorizontalContentAlignment="Stretch"
						VerticalContentAlignment="Stretch">
					<Button.Projection>
						<PlaneProjection />
					</Button.Projection>
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="Click">
							<i:InvokeCommandAction Command="{Binding CommandToggleToolbar, Mode=OneTime}" />
						</i:EventTrigger>
					</i:Interaction.Triggers>
					<Rectangle Fill="{StaticResource BrushIconDownArrow}" />
				</Button>
				<StackPanel x:Name="ExpandedPanel"
							Orientation="Vertical"
							Visibility="Collapsed">
					<Controls:CircleButton Command="{Binding CommandZoomIn, Mode=OneTime}">
						<Rectangle Fill="{StaticResource BrushIconPlus}" />
					</Controls:CircleButton>
					<Controls:CircleButton Margin="0,10,0,0"
										   Command="{Binding CommandZoomOut, Mode=OneTime}">
						<Rectangle Fill="{StaticResource BrushIconMinus}" />
					</Controls:CircleButton>
					<Rectangle Height="35"
							   Fill="{StaticResource BrushIconEllipsis}" />
					<Controls:CircleButton Caption="street"
										   Command="{Binding CommandShowSatelliteHybridLayer, Mode=OneTime}"
										   Visibility="{Binding IsStreetLayerVisible, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
						<Controls:CircleButton.Background>
							<ImageBrush ImageSource="/Assets/StreetView.png"
										Stretch="None" />
						</Controls:CircleButton.Background>
					</Controls:CircleButton>
					<Controls:CircleButton Caption="satellite"
										   Command="{Binding CommandShowStreetLayer, Mode=OneTime}"
										   Visibility="{Binding IsSatelliteHybridLayerVisible, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
						<Controls:CircleButton.Background>
							<ImageBrush ImageSource="/Assets/SatelliteView.png"
										Stretch="None" />
						</Controls:CircleButton.Background>
					</Controls:CircleButton>
					<Controls:CircleToggleButton Margin="0,10,0,0"
												 Caption="traffic"
												 Command="{Binding CommandToggleMapOverlay, Mode=OneTime}"
												 IsChecked="{Binding IsTrafficLayerVisible, Converter={StaticResource BooleanConverter}, Mode=OneWay}"
												 IsEnabled="{Binding IsOnline.Value, Converter={StaticResource BooleanConverter}}">
						<Controls:CircleToggleButton.CommandParameter>
							<CodifyMaps:GoogleMapsLayer>TrafficOverlay</CodifyMaps:GoogleMapsLayer>
						</Controls:CircleToggleButton.CommandParameter>
						<Rectangle Fill="{StaticResource BrushIconTraffic}" />
					</Controls:CircleToggleButton>
					<Controls:CircleToggleButton Margin="0,10,0,0"
												 Caption="transport"
												 Command="{Binding CommandToggleMapOverlay, Mode=OneTime}"
												 IsChecked="{Binding IsTransitLayerVisible, Converter={StaticResource BooleanConverter}, Mode=OneWay}">
						<Controls:CircleToggleButton.CommandParameter>
							<CodifyMaps:GoogleMapsLayer>TransitOverlay</CodifyMaps:GoogleMapsLayer>
						</Controls:CircleToggleButton.CommandParameter>
						<Rectangle Fill="{StaticResource BrushIconTrain}" />
					</Controls:CircleToggleButton>
					<Rectangle Height="35"
							   Fill="{StaticResource BrushIconEllipsis}" />
					<Controls:CircleToggleButton Caption="network"
												 IsChecked="{Binding IsOnline.Value, Mode=TwoWay}">
						<Rectangle Fill="{StaticResource BrushIconWifi}" />
					</Controls:CircleToggleButton>
				</StackPanel>
			</StackPanel>
		</Border>
		<Grid x:Name="SearchPanel"
			  Visibility="Collapsed">
			<Rectangle x:Name="SearchBackground"
					   Fill="{StaticResource BrushSemiTransparentBackground}"
					   IsHitTestVisible="False"
					   Opacity="0" />
			<Grid x:Name="SearchContentPanel"
				  Height="52"
				  Background="{StaticResource PhoneChromeBrush}"
				  VerticalAlignment="Top">
				<i:Interaction.Triggers>
					<Triggers:RootTouchTrigger CanTrigger="{Binding Visibility, Converter={StaticResource BooleanConverter}, ElementName=SearchPanel}">
						<i:InvokeCommandAction Command="{Binding CommandGoToDefaultState, Mode=OneTime}" />
					</Triggers:RootTouchTrigger>
				</i:Interaction.Triggers>
				<Grid.RenderTransform>
					<CompositeTransform TranslateY="-52"/>
				</Grid.RenderTransform>
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<Controls:AutoCompleteBox x:Name="SearchBox"
										  Height="76"
										  Margin="-12"
										  FilterMode="None"
										  ItemsSource="{Binding Suggestions}"
										  MinimumPopulateDelay="500"
										  MinimumPrefixLength="3"
										  SelectedItem="{Binding SelectedSuggestion, Mode=TwoWay}"
										  Text="{Binding SearchInput.Value, Mode=TwoWay}"
										  ValueMemberBinding="{Binding Description}"
										  InputScope="{StaticResource InputScopeSearch}">
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="Populating">
							<i:InvokeCommandAction Command="{Binding CommandGetSuggestions}" />
						</i:EventTrigger>
						<Triggers:KeyPressTrigger CanTrigger="{Binding SearchInput, Converter={StaticResource BooleanConverter}}"
							Key="Enter">
							<i:InvokeCommandAction Command="{Binding CommandSearch, Mode=OneTime}" />
						</Triggers:KeyPressTrigger>
					</i:Interaction.Triggers>
					<Controls:AutoCompleteBox.ItemTemplate>
						<DataTemplate>
							<TextBlock Margin="{StaticResource PhoneVerticalMargin}"
									   Text="{Binding Description}" />
						</DataTemplate>
					</Controls:AutoCompleteBox.ItemTemplate>
				</Controls:AutoCompleteBox>
				<Button Grid.Column="1"
						Command="{Binding CommandSearch, Mode=OneTime}"
						IsHitTestVisible="{Binding SearchInput, Converter={StaticResource BooleanConverter}}"
						Template="{x:Null}">
					<Border Height="52"
							Width="52"
							Background="{StaticResource PhoneBackgroundBrush}">
						<Rectangle Height="32"
								   Width="32"
								   Fill="{StaticResource BrushIconSearch}"
								   HorizontalAlignment="Center"
								   VerticalAlignment="Center" />
					</Border>
				</Button>
			</Grid>
		</Grid>
		<Grid x:Name="RoutePanel" Visibility="Collapsed">
			<Rectangle x:Name="RouteBackground"
					   Fill="{StaticResource BrushSemiTransparentBackground}"
					   IsHitTestVisible="False"
					   Opacity="0" />
			<Grid x:Name="RouteContentPanel" VerticalAlignment="Top" Background="{StaticResource PhoneChromeBrush}" RenderTransformOrigin="0.5,0.5">
				<i:Interaction.Triggers>
					<Triggers:RootTouchTrigger CanTrigger="{Binding Visibility, Converter={StaticResource BooleanConverter}, ElementName=RoutePanel}">
						<i:InvokeCommandAction Command="{Binding CommandGoToDefaultState, Mode=OneTime}" />
					</Triggers:RootTouchTrigger>
				</i:Interaction.Triggers>
				<Grid.RenderTransform>
					<CompositeTransform TranslateY="-213"/>
				</Grid.RenderTransform>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition/>
			</Grid.RowDefinitions>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			<TextBlock Text="From:" VerticalAlignment="Center"/>
			<TextBox x:Name="FromTextBox" Grid.Column="1" VerticalAlignment="Center" InputScope="{StaticResource InputScopeSearch}" GotFocus="OnTextBoxGotFocus"/>
			<Controls:CircleButton Grid.Column="2" VerticalAlignment="Center">
				<Rectangle Fill="{StaticResource BrushIconCurrentLocationWhite}"/>
			</Controls:CircleButton>
			<TextBlock Text="To:" VerticalAlignment="Center" Grid.Row="1"/>
			<TextBox x:Name="ToTextBox" Grid.Column="1" VerticalAlignment="Center" Grid.Row="1" InputScope="{StaticResource InputScopeSearch}" GotFocus="OnTextBoxGotFocus"/>
			<Controls:CircleButton Grid.Column="2" VerticalAlignment="Center" Grid.Row="1">
				<Rectangle Fill="{StaticResource BrushIconCurrentLocationWhite}"/>
			</Controls:CircleButton>
			<Button Grid.Row="2" Grid.ColumnSpan="3" HorizontalAlignment="Right" Margin="0,0,-12,0" Content="Find Routes"/>
			</Grid>
		</Grid>
	</Grid>
	<i:Interaction.Behaviors>
		<DependencyShell:ApplicationBar Opacity="{StaticResource ShellOpacity}">
			<DependencyShell:ApplicationBar.Buttons>
				<DependencyShell:ApplicationBarIconButton Command="{Binding CommandStartTrackingCurrentLocation,Mode=OneTime}"
														  IconUri="/Assets/CurrentLocation.png"
														  IsEnabled="{Binding IsTrackingCurrentLocation.Value, Converter={StaticResource BooleanConverter}, ConverterParameter=reverse}"
														  Text="track" />
				<DependencyShell:ApplicationBarIconButton Command="{Binding CommandGoToSearchState,Mode=OneTime}"
														  IconUri="/Assets/Search.png"
														  Text="search" />
				<DependencyShell:ApplicationBarIconButton Command="{Binding CommandGoToRouteState,Mode=OneTime}"
														  IconUri="/Assets/Route.png"
														  Text="route" />
			</DependencyShell:ApplicationBar.Buttons>
			<DependencyShell:ApplicationBar.MenuItems>
				<DependencyShell:ApplicationBarMenuItem Command="{Binding CommandClearSearchResults, Mode=OneTime}"
														Text="clear search" />
			</DependencyShell:ApplicationBar.MenuItems>
		</DependencyShell:ApplicationBar>
	</i:Interaction.Behaviors>
</phone:PhoneApplicationPage>
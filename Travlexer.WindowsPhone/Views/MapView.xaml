<codifyPhone:PhoneApplicationPage x:Class="Travlexer.WindowsPhone.Views.MapView"
                                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                  xmlns:behaviors="clr-namespace:Codify.Behaviors;assembly=Codify"
                                  xmlns:codify="clr-namespace:Codify;assembly=Codify.Core"
                                  xmlns:codifyControls="clr-namespace:Codify.Controls;assembly=Codify"
                                  xmlns:codifyPhone="clr-namespace:Codify.WindowsPhone;assembly=Codify.WindowsPhone"
                                  xmlns:controls="clr-namespace:Travlexer.WindowsPhone.Controls"
                                  xmlns:core="clr-namespace:Microsoft.Phone.Controls.Maps.Core;assembly=Microsoft.Phone.Controls.Maps"
                                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                                  xmlns:ec="clr-namespace:Microsoft.Expression.Interactivity.Core;assembly=Microsoft.Expression.Interactions"
                                  xmlns:googleMapsControls="clr-namespace:Codify.GoogleMaps.Controls;assembly=Codify.GoogleMaps"
                                  xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                                  xmlns:maps="clr-namespace:Microsoft.Phone.Controls.Maps;assembly=Microsoft.Phone.Controls.Maps"
                                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                                  xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
                                  xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
                                  xmlns:shellExtension="clr-namespace:Codify.WindowsPhone.ShellExtension;assembly=Codify.WindowsPhone"
                                  xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
                                  xmlns:triggers="clr-namespace:Codify.Triggers;assembly=Codify"
                                  xmlns:windowsPhone="clr-namespace:Travlexer.WindowsPhone"
                                  Style="{StaticResource PageDefault}"
                                  mc:Ignorable="d"
                                  d:DesignHeight="768"
                                  d:DesignWidth="480"
                                  shell:SystemTray.Opacity="{StaticResource OpacityShell}">
    <d:DesignProperties.DataContext>
        <Binding Path="MapViewModel">
            <Binding.Source>
                <windowsPhone:DesignTime />
            </Binding.Source>
        </Binding>
    </d:DesignProperties.DataContext>
    <phone:PhoneApplicationPage.Resources>
        <ScaleTransform x:Key="TileScale" />
        <!--This style is used in code behind, do not remove-->
        <Style x:Key="TilePushpin"
               TargetType="maps:Pushpin">
            <Setter Property="UseLayoutRounding"
                    Value="False" />
            <Setter Property="Width"
                    Value="256" />
            <Setter Property="Height"
                    Value="256" />
            <Setter Property="IsHitTestVisible"
                    Value="False" />
            <Setter Property="RenderTransform"
                    Value="{StaticResource TileScale}" />
            <Setter Property="CacheMode"
                    Value="BitmapCache" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="maps:Pushpin">
                        <Rectangle Height="256"
                                   Width="256"
                                   Fill="{TemplateBinding Background}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Color x:Key="ColorGridLine">#FFAAAAAA</Color>
        <Color x:Key="ColorTransparent">#00AAAAAA</Color>
        <DataTemplate x:Key="DataTemplateKeyValueIcon">
            <StackPanel Height="34"
                        Orientation="Horizontal">
                <Rectangle Style="{StaticResource IconRectangleStyle}"
                           Margin="0,0,5,0"
                           Fill="{Binding Icon, Mode=OneTime}"
                           VerticalAlignment="Center" />
                <TextBlock FontFamily="{StaticResource PhoneFontFamilyNormal}"
                           FontSize="{StaticResource PhoneFontSizeMedium}"
                           Text="{Binding Value, Mode=OneTime}"
                           VerticalAlignment="Center" />
            </StackPanel>
        </DataTemplate>
    </phone:PhoneApplicationPage.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger>
            <i:InvokeCommandAction Command="{Binding CommandActivate, Mode=OneTime}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding CommandDeactivate, Mode=OneTime}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <shell:SystemTray.ProgressIndicator>
        <shell:ProgressIndicator IsIndeterminate="{Binding IsBusy.Value}"
                                 IsVisible="True" />
    </shell:SystemTray.ProgressIndicator>
    <Grid Background="#FFDDDDDD">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStates">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0"
                                      To="Drag">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="DragPushpin"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)"
                                             Duration="0:0:0.4"
                                             EasingFunction="{StaticResource EasingQuinticOut}"
                                             To="-90" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DragPushpin"
                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Toolbar"
                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RoutesLayer"
                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PushpinsLayer"
                                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualTransition>
                    <VisualTransition GeneratedDuration="0:0:0.4"
                                      GeneratedEasingFunction="{StaticResource EasingQuinticOut}" />
                    <VisualTransition GeneratedDuration="0"
                                      To="PushpinSelected" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Default" />
                <VisualState x:Name="Search">
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="SearchBackground"
                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                         Duration="0"
                                         To="1"
                                         d:IsOptimized="True" />
                        <DoubleAnimation Storyboard.TargetName="SearchContentPanel"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)"
                                         Duration="0"
                                         EasingFunction="{StaticResource EasingQuinticOut}"
                                         To="32"
                                         d:IsOptimized="True" />
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="PushpinSelected">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedPushpinContent"
                                                       Storyboard.TargetProperty="(PushpinOverlay.VisualState)">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <codify:ExpansionStates>Expanded</codify:ExpansionStates>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimation Storyboard.TargetName="SelectedPushpinBackground"
                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                         Duration="0"
                                         To="1"
                                         d:IsOptimized="True" />
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedPushpinLayer"
                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Toolbar"
                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Drag">
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="DragPushpin"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)"
                                         Duration="0"
                                         To="-90"
                                         d:IsOptimized="True" />
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DragPushpin"
                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Toolbar"
                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PushpinsLayer"
                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RoutesLayer"
                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Route">
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="RouteContentPanel"
                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)"
                                         Duration="0"
                                         To="32"
                                         d:IsOptimized="True" />
                        <DoubleAnimation Storyboard.TargetName="RouteBackground"
                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                         Duration="0"
                                         To="1"
                                         d:IsOptimized="True" />
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="RouteSelected">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedRouteLayer"
                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimation Storyboard.TargetName="SelectedRouteBackground"
                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                         Duration="0"
                                         To="1"
                                         d:IsOptimized="True" />
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Toolbar"
                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RoutesLayer"
                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="ToolbarStates">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.4"
                                      GeneratedEasingFunction="{StaticResource EasingQuinticOut}" />
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Collapsed" />
                <VisualState x:Name="Expanded">
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="Toolbar"
                                         Storyboard.TargetProperty="(FrameworkElement.Height)"
                                         Duration="0"
                                         To="480"
                                         d:IsOptimized="True" />
                        <DoubleAnimation Storyboard.TargetName="ExpandButton"
                                         Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationX)"
                                         Duration="0"
                                         To="180"
                                         d:IsOptimized="True" />
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Rectangle>
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="0,30"
                                     MappingMode="Absolute"
                                     SpreadMethod="Repeat">
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="{StaticResource ColorTransparent}"
                                          Offset="0.49" />
                            <GradientStop Color="{StaticResource ColorGridLine}"
                                          Offset="0.49" />
                            <GradientStop Color="{StaticResource ColorGridLine}"
                                          Offset="0.50" />
                            <GradientStop Color="{StaticResource ColorTransparent}"
                                          Offset="0.50" />
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <Rectangle>
            <Rectangle.Fill>
                <LinearGradientBrush EndPoint="30,0"
                                     MappingMode="Absolute"
                                     SpreadMethod="Repeat">
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="{StaticResource ColorTransparent}"
                                          Offset="0.49" />
                            <GradientStop Color="{StaticResource ColorGridLine}"
                                          Offset="0.49" />
                            <GradientStop Color="{StaticResource ColorGridLine}"
                                          Offset="0.50" />
                            <GradientStop Color="{StaticResource ColorTransparent}"
                                          Offset="0.50" />
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Rectangle.Fill>
        </Rectangle>
        <maps:Map x:Name="Map"
                  Center="{Binding Center.Value, Mode=TwoWay}"
                  CopyrightVisibility="Collapsed"
                  CredentialsProvider="AiEEQMxcy4psQQEr7jujXL34vU9268zhPAWJRgDcHNpKdKwyP0TxZRiLOX6j2CMW"
                  LogoVisibility="Collapsed"
                  ZoomLevel="{Binding ZoomLevel.Value, Mode=TwoWay}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MapPan">
                    <i:InvokeCommandAction Command="{Binding CommandStopTrackingCurrentLocation, Mode=OneTime}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="DoubleTap">
                    <i:InvokeCommandAction Command="{Binding CommandStopTrackingCurrentLocation, Mode=OneTime}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <toolkit:GestureService.GestureListener>
                <toolkit:GestureListener PinchStarted="OnMapPinchStarted" />
            </toolkit:GestureService.GestureListener>
            <maps:Map.Mode>
                <core:MercatorMode />
            </maps:Map.Mode>
            <maps:MapLayer Visibility="{Binding IsOnline.Value, Converter={StaticResource VisibilityConverter}}">
                <maps:MapTileLayer Visibility="{Binding IsStreetLayerVisible}">
                    <maps:MapTileLayer.TileSources>
                        <googleMapsControls:TileSource Layer="Street" />
                    </maps:MapTileLayer.TileSources>
                </maps:MapTileLayer>
                <maps:MapTileLayer Visibility="{Binding IsSatelliteHybridLayerVisible}">
                    <maps:MapTileLayer.TileSources>
                        <googleMapsControls:TileSource Layer="SatelliteHybrid" />
                    </maps:MapTileLayer.TileSources>
                </maps:MapTileLayer>
                <maps:MapTileLayer Visibility="{Binding IsTrafficLayerVisible}">
                    <maps:MapTileLayer.TileSources>
                        <googleMapsControls:TileSource Layer="TrafficOverlay" />
                    </maps:MapTileLayer.TileSources>
                </maps:MapTileLayer>
                <maps:MapTileLayer Visibility="{Binding IsTransitLayerVisible}">
                    <maps:MapTileLayer.TileSources>
                        <googleMapsControls:TileSource Layer="TransitOverlay" />
                    </maps:MapTileLayer.TileSources>
                </maps:MapTileLayer>
            </maps:MapLayer>
            <maps:MapLayer Visibility="{Binding IsOnline.Value, ConverterParameter=reverse, Converter={StaticResource VisibilityConverter}}">
                <maps:MapLayer x:Name="OfflineValidLayer">
                    <maps:MapLayer x:Name="OfflineBaseLayer" />
                    <maps:MapLayer x:Name="OfflineTransitLayer"
                                   Visibility="{Binding IsTransitLayerVisible}" />
                </maps:MapLayer>
                <TextBlock x:Name="OfflineInvalidLayer"
                           FontSize="{StaticResource PhoneFontSizeMedium}"
                           Foreground="#FF3B3B3B"
                           IsHitTestVisible="False"
                           TextAlignment="Center"
                           VerticalAlignment="Center"
                           Visibility="Collapsed">
                    <Run Text="Offline mode not available" />
                    <LineBreak />
                    <Run Text="at this zoom level" />
                </TextBlock>
            </maps:MapLayer>
            <maps:Pushpin IsHitTestVisible="{Binding DragPushpin, ConverterParameter=reverse, Converter={StaticResource BooleanConverter}}"
                          Location="{Binding CurrentLocation}"
                          PositionOrigin="Center"
                          Template="{x:Null}"
                          Visibility="{Binding CurrentLocation, Converter={StaticResource VisibilityConverter}}">
                <i:Interaction.Triggers>
                    <triggers:EventTrigger EventName="Tap"
                                           IsHandled="True">
                        <i:InvokeCommandAction Command="{Binding CommandAddCurrentPlace, Mode=OneTime}" />
                    </triggers:EventTrigger>
                </i:Interaction.Triggers>
                <controls:CurrentLocationIndicator Width="32"
                                                   HasHeading="{Binding IsCompassSupported}"
                                                   Heading="{Binding Heading}"/>
            </maps:Pushpin>
            <maps:MapLayer x:Name="RoutesLayer"
                           Opacity="0.7"
                           codifyControls:PanelExtension.ItemsSource="{Binding Routes}">
                <codifyControls:PanelExtension.ItemTemplate>
                    <DataTemplate>
                        <controls:MapPolyline Locations="{Binding Data.Points, Converter={StaticResource LocationCollectionToLocationCollectionConverter}}"
                                              Stroke="{Binding Data.Color, Converter={StaticResource ElementColorToBrushConverter}}"
                                              StrokeEndLineCap="Round"
                                              StrokeStartLineCap="Round"
                                              StrokeThickness="{StaticResource MapPolylineOuterStrokeThickness}"
                                              ZoomLevel="{Binding Parent.ZoomLevel.Value}">

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Tap">
                                    <i:InvokeCommandAction Command="{Binding Parent.CommandSelectRoute, Mode=OneTime}"
                                                           CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </controls:MapPolyline>
                    </DataTemplate>
                </codifyControls:PanelExtension.ItemTemplate>
            </maps:MapLayer>
            <maps:MapLayer x:Name="PushpinsLayer"
                           codifyControls:PanelExtension.ItemsSource="{Binding Pushpins}"
                           codifyControls:PanelExtension.Delay="0:0:0.1">
                <i:Interaction.Behaviors>
                    <behaviors:CancelGestureEventBehavior />
                </i:Interaction.Behaviors>
                <codifyControls:PanelExtension.ItemTemplate>
                    <DataTemplate>
                        <maps:Pushpin x:Name="Pushpin"
                                      Background="{Binding Data.Color, Converter={StaticResource ElementColorToBrushConverter}}"
                                      Location="{Binding Data.Location, Converter={StaticResource LocationGeoCoordinateConverter}}"
                                      PositionOrigin="BottomCenter">
                            <toolkit:GestureService.GestureListener>
                                <toolkit:GestureListener DragCompleted="OnPushpinDragCompleted"
                                                         DragDelta="OnPushpinDragDelta"
                                                         DragStarted="OnPushpinDragStarted"
                                                         Hold="OnPushpinHold" />
                            </toolkit:GestureService.GestureListener>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Tap">
                                    <i:InvokeCommandAction Command="{Binding Parent.CommandSelectPushpin, Mode=OneTime}"
                                                           CommandParameter="{Binding}" />
                                    <i:InvokeCommandAction Command="{Binding Parent.CommandStopTrackingCurrentLocation, Mode=OneTime}" />
                                </i:EventTrigger>
                                <i:EventTrigger>
                                    <ec:GoToStateAction StateName="Drop"
                                                        TargetObject="{Binding ElementName=Pushpin}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Grid>
                                <Rectangle Style="{StaticResource IconRectangleStyle}"
                                           Fill="{Binding Data.Icon, Converter={StaticResource PlaceIconToBrushConverter}}"
                                           Visibility="{Binding Data.IsSearchResult, Converter={StaticResource VisibilityConverter}, ConverterParameter=reverse}" />
                                <Rectangle Style="{StaticResource IconRectangleStyle}"
                                           Fill="{StaticResource BrushIconSearch}"
                                           Visibility="{Binding Data.IsSearchResult, Converter={StaticResource VisibilityConverter}}" />
                            </Grid>
                        </maps:Pushpin>
                    </DataTemplate>
                </codifyControls:PanelExtension.ItemTemplate>
            </maps:MapLayer>
            <maps:MapLayer x:Name="SelectedRouteLayer"
                           Visibility="Collapsed">
                <i:Interaction.Behaviors>
                    <behaviors:CancelGestureEventBehavior />
                </i:Interaction.Behaviors>
                <Rectangle x:Name="SelectedRouteBackground"
                           Fill="{StaticResource BrushSemiTransparentBackground}"
                           IsHitTestVisible="False"
                           Opacity="0" />
                <controls:MapPolyline DataContext="{Binding SelectedRoute, Mode=OneWay}"
                                      Locations="{Binding Data.Points, Converter={StaticResource LocationCollectionToLocationCollectionConverter}}"
                                      Stroke="{Binding Data.Color, Converter={StaticResource ElementColorToBrushConverter}}"
                                      StrokeEndLineCap="Round"
                                      StrokeStartLineCap="Round"
                                      StrokeThickness="{StaticResource MapPolylineOuterStrokeThickness}"
                                      ZoomLevel="{Binding Parent.ZoomLevel.Value}">
                    <i:Interaction.Triggers>
                        <triggers:ElementMouseButtonActivityTrigger CanTrigger="{Binding Visibility, Converter={StaticResource BooleanConverter}, ElementName=SelectedRouteLayer}"
                                                                    Element="{Binding ElementName=Map}">
                            <i:InvokeCommandAction Command="{Binding Parent.CommandGoToDefaultState, Mode=OneTime}" />
                        </triggers:ElementMouseButtonActivityTrigger>
                    </i:Interaction.Triggers>

                </controls:MapPolyline>
            </maps:MapLayer>
            <maps:MapLayer x:Name="SelectedPushpinLayer"
                           Visibility="Collapsed">
                <i:Interaction.Behaviors>
                    <behaviors:CancelGestureEventBehavior />
                </i:Interaction.Behaviors>
                <Rectangle x:Name="SelectedPushpinBackground"
                           Fill="{StaticResource BrushSemiTransparentBackground}"
                           IsHitTestVisible="False"
                           Opacity="0" />
                <maps:Pushpin x:Name="SelectedPushpin"
                              Background="{Binding Data.Color, Converter={StaticResource ElementColorToBrushConverter}}"
                              DataContext="{Binding SelectedPushpin}"
                              Location="{Binding Data.Location, Converter={StaticResource LocationGeoCoordinateConverter}}"
                              PositionOrigin="BottomCenter"
                              RenderTransformOrigin="0.5,0.5"
                              Tag="{Binding Data.IsSearchResult}"
                              Visibility="{Binding Converter={StaticResource VisibilityConverter}}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Tap">
                            <i:InvokeCommandAction Command="{Binding Parent.CommandGoToDefaultState, Mode=OneTime}" />
                        </i:EventTrigger>
                        <triggers:ElementMouseButtonActivityTrigger Element="{Binding ElementName=Map}">
                            <i:InvokeCommandAction Command="{Binding Parent.CommandGoToDefaultState, Mode=OneTime}" />
                        </triggers:ElementMouseButtonActivityTrigger>
                        <i:EventTrigger>
                            <ec:GoToStateAction StateName="Drop"
                                                TargetName="SelectedPushpin"
                                                UseTransitions="False" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <controls:PushpinContent x:Name="SelectedPushpinContent"
                                             Address="{Binding Data.Address}"
                                             CommandRefresh="{Binding Parent.CommandUpdatePlace, Mode=OneTime}"
                                             CommandRefreshParameter="{Binding}"
                                             ContactNumber="{Binding Data.ContactNumber}"
                                             Icon="{Binding Data.Icon}"
                                             IsSearchResult="{Binding Data.IsSearchResult}"
                                             Rating="{Binding Data.Rating}"
                                             Title="{Binding Data.Name}"
                                             VisualState="Collapsed"
                                             WebSite="{Binding Data.WebSite}"
                                             WorkingState="{Binding Data.DataState}" />
                </maps:Pushpin>
            </maps:MapLayer>
            <maps:Pushpin x:Name="DragPushpin"
                          Background="{Binding Color, Converter={StaticResource ElementColorToBrushConverter}}"
                          DataContext="{Binding DragPushpin.Data}"
                          IsHitTestVisible="False"
                          Location="{Binding Location, Converter={StaticResource LocationGeoCoordinateConverter}}"
                          PositionOrigin="BottomCenter"
                          Visibility="Collapsed">
                <i:Interaction.Triggers>
                    <i:EventTrigger>
                        <ec:GoToStateAction StateName="Drop"
                                            TargetObject="{Binding ElementName=DragPushpin}"
                                            UseTransitions="False" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <maps:Pushpin.RenderTransform>
                    <CompositeTransform />
                </maps:Pushpin.RenderTransform>
                <Rectangle Height="32"
                           Width="32"
                           Fill="{Binding Icon, Converter={StaticResource PlaceIconToBrushConverter}}" />
            </maps:Pushpin>
        </maps:Map>
        <Border x:Name="Toolbar"
                Height="108"
                Margin="10,0"
                Padding="10"
                Width="68"
                Background="{StaticResource PhoneChromeBrush}"
                CornerRadius="34"
                HorizontalAlignment="{Binding ToolbarAlignment.Value, Mode=OneWay}"
                Opacity="{StaticResource OpacityShell}"
                VerticalAlignment="Center"
                Visibility="{Binding HideToolbar.Value, Mode=OneWay, Converter={StaticResource VisibilityConverter}, ConverterParameter=reverse}">
            <i:Interaction.Behaviors>
                <behaviors:CancelGestureEventBehavior />
            </i:Interaction.Behaviors>
            <StackPanel>
                <controls:CircleButton Click="OnCaptureScreen">
                    <Rectangle Style="{StaticResource IconRectangleStyle}"
                               Fill="{StaticResource BrushIconCamera}" />
                </controls:CircleButton>
                <Button Style="{StaticResource EmptyButton}"
                        x:Name="ExpandButton"
                        Height="40"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch">
                    <Button.Projection>
                        <PlaneProjection />
                    </Button.Projection>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding CommandToggleToolbar, Mode=OneTime}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Rectangle Fill="{StaticResource BrushIconDownArrow}" />
                </Button>
                <StackPanel x:Name="ExpandedPanel"
                            Orientation="Vertical">
                    <controls:CircleButton Command="{Binding CommandZoomIn, Mode=OneTime}">
                        <Rectangle Style="{StaticResource IconRectangleStyle}"
                                   Fill="{StaticResource BrushIconPlus}" />
                    </controls:CircleButton>
                    <controls:CircleButton Margin="0,10,0,0"
                                           Command="{Binding CommandZoomOut, Mode=OneTime}">
                        <Rectangle Style="{StaticResource IconRectangleStyle}"
                                   Fill="{StaticResource BrushIconMinus}" />
                    </controls:CircleButton>
                    <Rectangle Height="35"
                               Fill="{StaticResource BrushIconEllipsis}" />
                    <controls:CircleButton Caption="street"
                                           Command="{Binding CommandShowSatelliteHybridLayer, Mode=OneTime}"
                                           Visibility="{Binding IsStreetLayerVisible, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
                        <controls:CircleButton.Background>
                            <ImageBrush ImageSource="/Assets/StreetView.png"
                                        Stretch="None" />
                        </controls:CircleButton.Background>
                    </controls:CircleButton>
                    <controls:CircleButton Caption="satellite"
                                           Command="{Binding CommandShowStreetLayer, Mode=OneTime}"
                                           Visibility="{Binding IsSatelliteHybridLayerVisible, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
                        <controls:CircleButton.Background>
                            <ImageBrush ImageSource="/Assets/SatelliteView.png"
                                        Stretch="None" />
                        </controls:CircleButton.Background>
                    </controls:CircleButton>
                    <controls:CircleToggleButton Margin="0,10,0,0"
                                                 Caption="traffic"
                                                 Command="{Binding CommandToggleMapOverlay, Mode=OneTime}"
                                                 IsChecked="{Binding IsTrafficLayerVisible, Converter={StaticResource BooleanConverter}, Mode=OneWay}"
                                                 IsEnabled="{Binding IsOnline.Value, Converter={StaticResource BooleanConverter}}">
                        <controls:CircleToggleButton.CommandParameter>
                            <googleMapsControls:Layer>TrafficOverlay</googleMapsControls:Layer>
                        </controls:CircleToggleButton.CommandParameter>
                        <Rectangle Style="{StaticResource IconRectangleStyle}"
                                   Fill="{StaticResource BrushIconTraffic}" />
                    </controls:CircleToggleButton>
                    <controls:CircleToggleButton Margin="0,10,0,0"
                                                 Caption="transit"
                                                 Command="{Binding CommandToggleMapOverlay, Mode=OneTime}"
                                                 IsChecked="{Binding IsTransitLayerVisible, Converter={StaticResource BooleanConverter}, Mode=OneWay}">
                        <controls:CircleToggleButton.CommandParameter>
                            <googleMapsControls:Layer>TransitOverlay</googleMapsControls:Layer>
                        </controls:CircleToggleButton.CommandParameter>
                        <Rectangle Style="{StaticResource IconRectangleStyle}"
                                   Fill="{StaticResource BrushIconTrain}" />
                    </controls:CircleToggleButton>
                    <Rectangle Height="35"
                               Fill="{StaticResource BrushIconEllipsis}"
                               Visibility="Collapsed" />
                    <controls:CircleToggleButton Caption="network"
                                                 IsChecked="{Binding IsOnline.Value, Mode=TwoWay}"
                                                 Visibility="Collapsed">
                        <Rectangle Style="{StaticResource IconRectangleStyle}"
                                   Fill="{StaticResource BrushIconWifi}" />
                    </controls:CircleToggleButton>
                </StackPanel>
            </StackPanel>
        </Border>
        <Grid x:Name="SearchPanel">
            <i:Interaction.Behaviors>
                <behaviors:CancelGestureEventBehavior />
            </i:Interaction.Behaviors>
            <Rectangle x:Name="SearchBackground"
                       Fill="{StaticResource BrushSemiTransparentBackground}"
                       IsHitTestVisible="False"
                       Opacity="0" />
            <Grid x:Name="SearchContentPanel"
                  Background="{StaticResource PhoneChromeBrush}"
                  VerticalAlignment="Top">
                <i:Interaction.Triggers>
                    <triggers:ElementMouseButtonActivityTrigger CanTrigger="{Binding Visibility, Converter={StaticResource BooleanConverter}, ElementName=SearchPanel}"
                                                                Element="{Binding ElementName=Map}">
                        <i:InvokeCommandAction Command="{Binding CommandGoToDefaultState, Mode=OneTime}" />
                    </triggers:ElementMouseButtonActivityTrigger>
                </i:Interaction.Triggers>
                <Grid.RenderTransform>
                    <CompositeTransform TranslateY="-185" />
                </Grid.RenderTransform>
                <Grid.RowDefinitions>
                    <RowDefinition Height="52" />
                    <RowDefinition Height="Auto"
                                   MaxHeight="80" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Button Width="52"
                        Height="52"
                        Style="{StaticResource EmptyButton}"
                        Command="{Binding CommandSelectContactAddress, Mode=OneTime}">
                    <Rectangle Style="{StaticResource IconRectangleStyle}"
                               Fill="{StaticResource BrushIconContacts}" />
                </Button>
                <controls:AutoCompleteBox x:Name="SearchBox"
                                          Height="76"
                                          Margin="-12"
                                          FilterMode="None"
                                          ItemsSource="{Binding Suggestions}"
                                          MinimumPopulateDelay="500"
                                          MinimumPrefixLength="3"
                                          SelectedItem="{Binding SelectedSuggestion, Mode=TwoWay}"
                                          Text="{Binding SearchInput.Value, Mode=TwoWay}"
                                          ValueMemberBinding="{Binding Description}"
                                          Grid.Column="1">
                    <controls:AutoCompleteBox.InputScope>
                        <InputScope>
                            <InputScopeName NameValue="Search" />
                        </InputScope>
                    </controls:AutoCompleteBox.InputScope>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Populating">
                            <i:InvokeCommandAction Command="{Binding CommandGetSuggestions}" />
                        </i:EventTrigger>
                        <triggers:KeyPressTrigger CanTrigger="{Binding SearchInput, Converter={StaticResource BooleanConverter}}"
                                                  Key="Enter">
                            <i:InvokeCommandAction Command="{Binding CommandSearch, Mode=OneTime}" />
                        </triggers:KeyPressTrigger>
                    </i:Interaction.Triggers>
                    <controls:AutoCompleteBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Margin="{StaticResource PhoneVerticalMargin}"
                                       Text="{Binding Description}" />
                        </DataTemplate>
                    </controls:AutoCompleteBox.ItemTemplate>
                </controls:AutoCompleteBox>
                <Button Grid.Column="2"
                        Command="{Binding CommandSearch, Mode=OneTime}"
                        IsHitTestVisible="{Binding SearchInput, Converter={StaticResource BooleanConverter}}"
                        Template="{x:Null}">
                    <Border Height="52"
                            Width="52"
                            Background="{StaticResource PhoneBackgroundBrush}">
                        <Rectangle Height="32"
                                   Width="32"
                                   Fill="{StaticResource BrushIconSearch}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                    </Border>
                </Button>
                <controls:AdControl Grid.ColumnSpan="3"
                                    Grid.Row="1" />
            </Grid>
        </Grid>
        <Grid x:Name="RoutePanel">
            <i:Interaction.Behaviors>
                <behaviors:CancelGestureEventBehavior />
            </i:Interaction.Behaviors>
            <Rectangle x:Name="RouteBackground"
                       Fill="{StaticResource BrushSemiTransparentBackground}"
                       IsHitTestVisible="False"
                       Opacity="0" />
            <Grid x:Name="RouteContentPanel"
                  Background="{StaticResource PhoneChromeBrush}"
                  RenderTransformOrigin="0.5,0.5"
                  VerticalAlignment="Top">
                <i:Interaction.Triggers>
                    <triggers:ElementMouseButtonActivityTrigger CanTrigger="{Binding Visibility, Converter={StaticResource BooleanConverter}, ElementName=RoutePanel}"
                                                                Element="{Binding ElementName=Map}">
                        <i:InvokeCommandAction Command="{Binding CommandGoToDefaultState, Mode=OneTime}" />
                    </triggers:ElementMouseButtonActivityTrigger>
                    <triggers:KeyPressTrigger CanTrigger="{Binding Visibility, Converter={StaticResource BooleanConverter}, ElementName=RoutePanel}"
                                              Key="Enter">
                        <i:InvokeCommandAction Command="{Binding CommandRoute, Mode=OneTime}" />
                    </triggers:KeyPressTrigger>
                </i:Interaction.Triggers>
                <Grid.RenderTransform>
                    <CompositeTransform TranslateY="-435" />
                </Grid.RenderTransform>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                    <RowDefinition Height="Auto"
                                   MaxHeight="80" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Margin="12,0,0,0"
                           Text="From:"
                           VerticalAlignment="Center" />
                <TextBox x:Name="FromTextBox"
                         Grid.Column="1"
                         GotFocus="OnTextBoxGotFocus"
                         Text="{Binding DepartureLocation.Address, Mode=TwoWay}"
                         VerticalAlignment="Center"
                         Height="72">
                    <i:Interaction.Behaviors>
                        <behaviors:RealTimeBindingBehavior />
                    </i:Interaction.Behaviors>
                    <TextBox.InputScope>
                        <InputScope>
                            <InputScopeName NameValue="Search" />
                        </InputScope>
                    </TextBox.InputScope>
                </TextBox>
                <Button Grid.Column="2"
                        Command="{Binding CommandSetDepartLocationToCurrentLocation, Mode=OneTime}"
                        VerticalAlignment="Center"
                        Style="{StaticResource EmptyButton}">
                    <Rectangle Style="{StaticResource IconRectangleStyle}"
                               Fill="{StaticResource BrushIconCurrentLocation}" />
                </Button>
                <Button Grid.Column="3"
                        Style="{StaticResource EmptyButton}"
                        Command="{Binding CommandSelectDepartLocationFromContacts, Mode=OneTime}"
                        VerticalAlignment="Center"
                        Margin="{StaticResource PhoneHorizontalMargin}">
                    <Rectangle Style="{StaticResource IconRectangleStyle}"
                               Fill="{StaticResource BrushIconContacts}" />
                </Button>
                <Button Grid.RowSpan="2"
                        Style="{StaticResource EmptyButton}"
                        Command="{Binding CommandSwapRouteLocations}">
                    <Rectangle Style="{StaticResource IconRectangleStyle}"
                               Fill="{StaticResource BrushIconDownUp}" />
                </Button>
                <TextBlock Grid.Row="1"
                           Margin="12,0,0,0"
                           Text="To:"
                           VerticalAlignment="Center" />
                <TextBox x:Name="ToTextBox"
                         Grid.Column="1"
                         Grid.Row="1"
                         GotFocus="OnTextBoxGotFocus"
                         Text="{Binding ArrivalLocation.Address, Mode=TwoWay}"
                         VerticalAlignment="Center"
                         Height="72">
                    <i:Interaction.Behaviors>
                        <behaviors:RealTimeBindingBehavior />
                    </i:Interaction.Behaviors>
                    <TextBox.InputScope>
                        <InputScope>
                            <InputScopeName NameValue="Search" />
                        </InputScope>
                    </TextBox.InputScope>
                </TextBox>
                <Button Grid.Column="2"
                        Grid.Row="1"
                        Command="{Binding CommandSetArriveLocationToCurrentLocation, Mode=OneWay}"
                        VerticalAlignment="Center"
                        Style="{StaticResource EmptyButton}">
                    <Rectangle Style="{StaticResource IconRectangleStyle}"
                               Fill="{StaticResource BrushIconCurrentLocation}" />
                </Button>
                <Button Grid.Column="3"
                        Grid.Row="1"
                        Command="{Binding CommandSelectArriveLocationFromContacts, Mode=OneWay}"
                        VerticalAlignment="Center"
                        Margin="{StaticResource PhoneHorizontalMargin}"
                        Style="{StaticResource EmptyButton}">
                    <Rectangle Style="{StaticResource IconRectangleStyle}"
                               Fill="{StaticResource BrushIconContacts}" />
                </Button>
                <Grid Grid.ColumnSpan="4"
                      Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <toolkit:ListPicker ItemsSource="{Binding TravelModes}"
                                        ItemTemplate="{StaticResource DataTemplateKeyValueIcon}"
                                        SelectedItem="{Binding SelectedTravelMode.Value, Converter={StaticResource RouteModeKeyValueIconConverter}, Mode=TwoWay}" />
                    <toolkit:ListPicker Grid.Column="1"
                                        ItemsSource="{Binding RouteMethods, Mode=OneTime}"
                                        ItemTemplate="{StaticResource DataTemplateKeyValueIcon}"
                                        SelectedItem="{Binding SelectedRouteMethod.Value, Converter={StaticResource RouteMethodKeyValueIconConverter}, Mode=TwoWay}" />
                    <Button Grid.Column="1"
                            Grid.Row="1"
                            Command="{Binding CommandRoute, Mode=OneTime}"
                            HorizontalContentAlignment="Left"
                            VerticalAlignment="Bottom">
                        <StackPanel Orientation="Horizontal">
                            <Rectangle Style="{StaticResource IconRectangleStyle}"
                                       Margin="0,0,5,0"
                                       Fill="{StaticResource BrushIconRoute}" />
                            <TextBlock FontFamily="{StaticResource PhoneFontFamilyNormal}"
                                       FontSize="{StaticResource PhoneFontSizeMedium}"
                                       Text="{Binding GetRouteButtonText}" />
                        </StackPanel>
                    </Button>
                    <CheckBox Content="clear routes first"
                              Grid.Row="1"
                              IsChecked="{Binding ClearRoutesBeforeAddingNewRoute.Value, Mode=TwoWay}" />
                </Grid>
                <controls:AdControl Grid.ColumnSpan="4"
                                    Grid.Row="3" />
            </Grid>
        </Grid>
    </Grid>
    <shellExtension:ApplicationBar.ApplicationBar>
        <shellExtension:ApplicationBar ButtonCommandMemberPath="Command"
                                       ButtonIconUriMemberPath="IconUri"
                                       ButtonIsEnabledMemberPath="IsEnabled"
                                       ButtonItemsSource="{Binding SelectedAppBarButtonItemsSource}"
                                       ButtonTextMemberPath="Text"
                                       IsVisible="{Binding IsAppBarVisible}"
                                       MenuItemCommandMemberPath="Command"
                                       MenuItemIsEnabledMemberPath="IsEnabled"
                                       MenuItemsSource="{Binding SelectedAppBarMenuItemsSource}"
                                       MenuItemTextMemberPath="Text"
                                       Opacity="{StaticResource OpacityShell}" />
    </shellExtension:ApplicationBar.ApplicationBar>
</codifyPhone:PhoneApplicationPage>